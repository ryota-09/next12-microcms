import { Fragment, createElement } from "react";
import { unified } from "unified";
import parse from "rehype-parse";
import rehypeReact from "rehype-react";
import { GetServerSideProps } from "next";
import { getList } from "@/lib/microcms";
import { serialize } from "next-mdx-remote/serialize";
import Head from "next/head";
import Link from "next/link";

type Props = {
  children: React.ReactNode;
};

const filterWhitespace = (node) =>
  !(typeof node === "string" && node.trim() === "");

const H2Custom = ({ children, ...props }) => {
  
  return <h2 style={{ color: "red" }}>{children}:差し替えたH2</h2>;
};

const CustomLink = ({ children, ...props }) => {
  return <Link href={props.href}>{children.filter(filterWhitespace)}</Link>;
};

export const parseHtml = (content: string) => {
  const htmlAst = unified()
    .use(parse, { fragment: true })
    .use(rehypeReact, {
      createElement,
      Fragment,
      components: {
        h2: (props) => <H2Custom {...props} />,
        // a: (props) => <CustomLink {...props} />,
      },
    })
    .processSync(content).result;
  return htmlAst;
};

export default function Test({ source }) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Next12</h1>
        <div>{parseHtml(source)}</div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const { contents } = await getList();
  console.log("1", contents[0].content);
  console.log("2", contents[0].content.replace(/<br>/g, "<br />"));
  // MDX text - can be from a local file, database, anywhere
  // const mdxSource = parseHtml(contents[0].content.replace(/<br>/g, "<br />"))

  return { props: { source: contents[1].content.replace(/<br>/g, "<br />") } };
};
